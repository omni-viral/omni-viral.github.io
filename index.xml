<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Words about stuff</title>
    <link>https://omni-viral.github.io/</link>
    <description>Recent content on Words about stuff</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 16 Sep 2018 21:48:34 +0200</lastBuildDate>
    
	<atom:link href="https://omni-viral.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Working with device memory using Vulkan</title>
      <link>https://omni-viral.github.io/posts/memory/</link>
      <pubDate>Sun, 16 Sep 2018 21:48:34 +0200</pubDate>
      
      <guid>https://omni-viral.github.io/posts/memory/</guid>
      <description>Vulkan moves most of the complexity related to memory handling to the user&amp;rsquo;s code.
The API provides a very small set of functions.
While this post focuses on the Vulkan API, most ideas are applicable to DirectX 12 as well.
Heaps and types Device visible memory is provided by Vulkan implementation in few memory heaps. Each heap backs one or more memory types. One memory type is backed by only one heap.</description>
    </item>
    
  </channel>
</rss>